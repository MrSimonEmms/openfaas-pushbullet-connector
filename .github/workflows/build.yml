name: Build
on:
  - push
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get branch names
        id: branch-name
        uses: tj-actions/branch-names@v6
        with:
          strip_tag_prefix: v

      - name: Generate Docker tag
        id: docker
        run: |
          if [ "${{ steps.branch-name.outputs.current_branch }}" = "main" ] || [ "${{ steps.branch-name.outputs.is_tag }}" = "true"  ];
          then
            IMG_NAME="ghcr.io/${GITHUB_REPOSITORY,,}:latest"
            if [ "${{ steps.branch-name.outputs.is_tag }}" = "true"  ]; then
              IMG_NAME="${IMG_NAME},ghcr.io/${GITHUB_REPOSITORY,,}:${{ steps.branch-name.outputs.tag }}"
            fi

            echo "image_name=${IMG_NAME}" >> "$GITHUB_OUTPUT"
            echo "platforms=linux/amd64,linux/arm64,linux/arm/v7" >> "$GITHUB_OUTPUT"
          else
            # Change "/" for "-" and set to lowercase
            TAG="${{ steps.branch-name.outputs.current_branch }}"
            TAG="${TAG//\//-}"
            TAG="${TAG,,}"

            echo "image_name=ghcr.io/${GITHUB_REPOSITORY,,}:${TAG}" >> "$GITHUB_OUTPUT"
            echo "platforms=linux/amd64" >> "$GITHUB_OUTPUT"
          fi

          if [ "${{ steps.branch-name.outputs.is_tag }}" = "true"  ];
          then
            echo "version=${{ steps.branch-name.outputs.tag }}" >> "$GITHUB_OUTPUT"
          else
            echo "version=development" >> "$GITHUB_OUTPUT"
          fi

          echo "commit_id=${GITHUB_SHA}" >> "$GITHUB_OUTPUT"

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          build-args: |
            GIT_COMMIT=${{ steps.docker.outputs.commit_id }}
            VERSION=${{ steps.docker.outputs.version }}
          platforms: ${{ steps.docker.outputs.platforms }}
          push: true
          tags: ${{ steps.docker.outputs.image_name }}

      - name: Set Helm version
        if: steps.branch-name.outputs.is_tag == 'true'
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.version = "${{ steps.branch-name.outputs.tag }}"' ./chart/openfaas-pushbullet-connector/Chart.yaml

      - name: Sync repo with GitLab
        if: steps.branch-name.outputs.is_tag == 'true'
        run: |
          git remote add gitlab https://MrSimonEmms:${{ secrets.GITLAB_TOKEN }}@gitlab.com/MrSimonEmms/openfaas-pushbullet-connector.git
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          git commit -a -m "chore: set Helm version"
          git tag ${{ steps.branch-name.outputs.tag }}
          git push gitlab ${{ steps.branch-name.outputs.tag }} --force

      - name: Publish Helm chart
        if: steps.branch-name.outputs.is_tag == 'true'
        run: |
          NAME=$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}' | sed -e "s/:refs//")
          curl -f -X POST \
            -F token=${{ secrets.HELM_REPO_TRIGGER_TOKEN }} \
            -F ref=master \
            -F variables[PROJECT_OWNER]=${{ github.repository_owner }} \
            -F variables[PROJECT_CHART_REPO]=${NAME} \
            -F variables[TAG_NAME]=${{ steps.branch-name.outputs.tag }} \
            -F variables[CHART_DIR]=chart \
            -F variables[CHART_NAME]=${NAME} \
            https://gitlab.com/api/v4/projects/${{ secrets.HELM_REPO_PROJECT_ID }}/trigger/pipeline
